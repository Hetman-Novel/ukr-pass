document.addEventListener('DOMContentLoaded', function () {
   document.querySelectorAll('.block-custom-select-file').forEach(function (wrapper) {
      const input = wrapper.querySelector('input[type="file"]');
      const fileListContainer = wrapper.querySelector('.file-list');
      const invalidMsg = wrapper.querySelector('.invalid-file');
      const allowedTypes = ['image/jpeg', 'image/png'];
      let filesArr = [];

      // Устанавливаем атрибуты через JS
      input.setAttribute('multiple', 'multiple');
      input.setAttribute('accept', '.jpg,.jpeg,.png');

      input.addEventListener('change', function () {
         const newFiles = Array.from(this.files);

         newFiles.forEach(file => {
            if (!allowedTypes.includes(file.type)) return;

            if (file.size > 2 * 1024 * 1024) { // 2 Мб
               invalidMsg.style.display = 'block';
               invalidMsg.querySelector('.file-size-value').textContent = (file.size / (1024 * 1024)).toFixed(1) + ' Mb';
            } else {
               invalidMsg.style.display = 'none';
               if (!filesArr.some(f => f.name === file.name && f.size === file.size)) {
                  filesArr.push(file);
                  renderFileList();
               }
            }
         });

         input.value = ''; // сбрасываем выбранное значение
      });

      function renderFileList() {
         fileListContainer.innerHTML = '';
         filesArr.forEach((file, index) => {
            const sizeInMb = (file.size / (1024 * 1024)).toFixed(1) + ' Mb';
            const item = document.createElement('div');
            item.className = 'file-list-item';
            item.innerHTML = `<div class="wrap-name-and-size">
                  <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="28" height="28" fill="white"/><path d="M7.33464 20.6663C6.8763 20.6663 6.48408 20.5033 6.15797 20.1772C5.83186 19.8511 5.66852 19.4586 5.66797 18.9997V8.99967C5.66797 8.54134 5.8313 8.14912 6.15797 7.82301C6.48464 7.4969 6.87686 7.33356 7.33464 7.33301H12.3346L14.0013 8.99967H20.668C21.1263 8.99967 21.5188 9.16301 21.8455 9.48967C22.1721 9.81634 22.3352 10.2086 22.3346 10.6663V18.9997C22.3346 19.458 22.1716 19.8505 21.8455 20.1772C21.5194 20.5038 21.1269 20.6669 20.668 20.6663H7.33464Z" fill="#7F7F7F"/></svg>
                  <span>${file.name}</span>
                  <span class="size">${sizeInMb}</span>
               </div>
               <button type="button" class="file-remove">
                  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M6.96354 2.16199C7.24962 1.63414 7.67297 1.19336 8.18884 0.886212C8.70472 0.579062 9.29398 0.416947 9.89437 0.416992H10.4194C11.0198 0.416947 11.609 0.579062 12.1249 0.886212C12.6408 1.19336 13.0641 1.63414 13.3502 2.16199C14.7169 2.18991 15.7923 2.23241 16.5769 2.27199C17.6894 2.32783 18.8119 2.93033 19.1552 4.10949C19.1999 4.26255 19.2408 4.42477 19.2777 4.59616C19.5027 5.64783 18.704 6.50658 17.7148 6.58991C16.4415 6.69783 14.126 6.81908 10.1473 6.81908C6.16937 6.81908 3.85395 6.69783 2.58062 6.58991C1.59895 6.50699 0.77312 5.64283 1.05645 4.58116C1.13479 4.28658 1.23145 4.01866 1.3327 3.78116C1.7527 2.79741 2.74437 2.33283 3.7077 2.27949C4.46312 2.23783 5.54229 2.19199 6.96354 2.16199ZM2.4752 7.83574C2.37807 7.8274 2.28143 7.81418 2.18562 7.79616C2.5277 12.8162 2.84895 15.5199 3.04812 16.8687C3.18645 17.8066 3.81895 18.6257 4.80895 18.8637C5.8277 19.1082 7.53812 19.3749 10.1577 19.3749C12.7769 19.3749 14.4877 19.1082 15.5065 18.8637C16.496 18.6257 17.129 17.8066 17.2673 16.8687C17.4665 15.5199 17.7877 12.8145 18.1298 7.79283C18.0274 7.81265 17.9241 7.82698 17.8202 7.83574C16.5015 7.94699 14.149 8.06908 10.1473 8.06908C6.14645 8.06908 3.79395 7.94699 2.4752 7.83574ZM8.48604 11.167C8.47603 11.0574 8.44443 10.9509 8.39304 10.8536C8.34165 10.7563 8.2715 10.6701 8.18664 10.6001C8.10177 10.53 8.00387 10.4775 7.89859 10.4455C7.79331 10.4134 7.68273 10.4026 7.57323 10.4135C7.46374 10.4245 7.3575 10.457 7.26064 10.5092C7.16378 10.5615 7.07823 10.6324 7.00891 10.7178C6.9396 10.8033 6.8879 10.9017 6.8568 11.0072C6.8257 11.1128 6.81581 11.2234 6.8277 11.3328L7.24437 15.4995C7.25437 15.6091 7.28598 15.7156 7.33737 15.8129C7.38876 15.9102 7.45891 15.9964 7.54377 16.0664C7.62864 16.1365 7.72654 16.189 7.83182 16.221C7.9371 16.253 8.04768 16.2639 8.15717 16.2529C8.26667 16.242 8.37291 16.2095 8.46977 16.1572C8.56663 16.105 8.65218 16.0341 8.72149 15.9487C8.79081 15.8632 8.84251 15.7648 8.87361 15.6593C8.90471 15.5537 8.9146 15.4431 8.9027 15.3337L8.48604 11.167ZM12.7402 10.4212C12.6313 10.4102 12.5213 10.4208 12.4166 10.4524C12.3118 10.4839 12.2142 10.5358 12.1295 10.6051C12.0448 10.6743 11.9745 10.7596 11.9227 10.856C11.8709 10.9524 11.8386 11.0581 11.8277 11.167L11.411 15.3337C11.3995 15.4428 11.4097 15.5532 11.441 15.6584C11.4723 15.7637 11.5241 15.8617 11.5934 15.9469C11.6627 16.032 11.7481 16.1026 11.8448 16.1547C11.9414 16.2067 12.0474 16.2392 12.1567 16.2501C12.2659 16.2611 12.3762 16.2503 12.4813 16.2185C12.5864 16.1867 12.6841 16.1344 12.7689 16.0647C12.8537 15.995 12.924 15.9092 12.9755 15.8123C13.0271 15.7154 13.059 15.6092 13.0694 15.4999L13.486 11.3332C13.497 11.2244 13.4864 11.1144 13.4548 11.0096C13.4233 10.9048 13.3714 10.8073 13.3021 10.7225C13.2329 10.6378 13.1476 10.5675 13.0512 10.5157C12.9548 10.464 12.8491 10.4321 12.7402 10.4212Z" fill="white"/></svg>
               </button>`;
            item.querySelector('.file-remove').addEventListener('click', function () {
               filesArr.splice(index, 1);
               renderFileList();
            });
            fileListContainer.appendChild(item);
         });
      }
   });
});
